{{- if .Values.preqrequisitechecks.istio }}
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install-check-istio
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccount: canvas-sm-prehook-sa
      containers:
      - name: check-istio
        image: bitnami/kubectl:latest
        command: 
            - /bin/sh
            - -c
            - |
              # Check if the service exists in the namespace
              SERVICE=$(kubectl get svc istio-ingress  -n istio-ingress --ignore-not-found)
              if [ -z "$SERVICE" ]; then
                echo "Istio is not installed properly. Service 'istio-ingress' not found in namespace 'istio-ingress' with an External IP."
                exit 1
              else
                # Check if the service has an external IP
                EXTERNAL_IP=$(kubectl get svc istio-ingress -n istio-ingress -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
                if [ -z "$EXTERNAL_IP" ]; then
                  echo "Service 'istio-ingress' does not have an external IP allocated."
                  exit 1
                else
                  echo "Istio is configured properly and Service 'istio-ingress' in namespace 'istio-ingress' has an external IP: $EXTERNAL_IP."
                fi
              fi
              # Check if the VirtualService CRD exists
              VIRTUALSERVICE_CRD=$(kubectl get crd virtualservices.networking.istio.io --ignore-not-found)
              if [ -z "$VIRTUALSERVICE_CRD" ]; then
                echo "VirtualService CRD not found."
                exit 1
              else
                echo "VirtualService CRD exists. Proceeding to install the canvas"
              fi
      restartPolicy: Never
{{- end }}
